@startuml is001_RegardApplicationCausesSequenceForInquiringOamRecords
skinparam responseMessageBelowArrow true

title
RegardApplicationCausesSequenceForInquiringOamRecords
end title

participant "RO" as ro
participant "OL://v1/regard-application" as ol
participant "ALT://v1/add-operation-client-to-link" as alt
participant "newApplicationName://v1/redirect-oam-request-information" as newApplicationFuture

ro -> ol : {newApplicationName, releaseNumber, protocol, address, port} (apiKey)
activate ol

note over ol
<u>CreateLinkForInquiringOamRecords</u>
Request for automatically creating the Link:
OL => newApplicationName://v1/redirect-oam-request-information
end note
ol -> alt : { servingApplicationName == requestBody.newApplicationName,\n servingApplicationReleaseNumber == requestBody.releaseNumber,\n operationName == /v1/redirect-oam-request-information,\n consumingApplicationName == OamLog,\n consumingApplicationReleaseNumber == 2.1.0 } (apiKey)
ol <-- alt : {client-successfully-added, reason-of-failure}

note left ol
IF (NOT 200) OR (client-successfully-added==false)
end note
ro <-- ol : { successfully-connected==false,  reason-of-failure}

note over ol
ELSE
end note

note left ol #Orange
OKM addressing OL://v1/update-operation-key
is indicating successful creation of the Link
IF waiting > maximumWaitTimeToReceiveOperationKey
end note
ro <-- ol : { successfully-connected==false,  reason-of-failure}

note over ol
ELSE
end note

note over ol
After receiving an updated operation-key
for the operation-client
NewApp://v1/redirect-oam-request-information

<u>RequestForInquiringOamRecords</u>
Request for sending
oam records in future
end note
ol -> newApplicationFuture : {loggingApplication, releaseNumber, loggingService, protocol, address, port} (apiKey)
ol <-- newApplicationFuture : 204

note left ol
IF (NOT 204)
end note
ro <-- ol : { successfully-connected==false,  reason-of-failure}

note over ol
ELSE
end note

note over ol #LightCoral
OL does not know, whether ALT already 
contains an updated OL client at NewApp
end note

note over ol #Orange
attempts = 0 
end note

note over ol #Orange
mark#1
end note

note over ol #Orange
attempts = attempts + 1 
end note

note over ol
<u>CreateLinkForReceivingOamRecords</u>
Request for automatically creating the Link:
newApplication => OL://v1/record-oam-request
end note
ol -> alt : { servingApplicationName == OamLog,\n servingApplicationReleaseNumber == 2.1.0,\n operationName == /v1/record-oam-request,\n consumingApplicationName == requestBody.newApplicationName,\n consumingApplicationReleaseNumber == requestBody.releaseNumber } (apiKey)
ol <-- alt : {client-successfully-added, reason-of-failure}

note left ol #Orange
IF ( (attempts<=maximumNumberOfAttemptsToCreateLink)
      AND 
      (client-successfully-added==false)
      AND
      ( (reason-of-failure==ALT_SERVING_APPLICATION_NAME_UNKNOWN)
        OR (reason-of-failure==ALT_SERVING_APPLICATION_RELEASE_NUMBER_UNKNOWN)
  Return to mark#1
)
end note

note over ol
ELSE
end note

note left ol
IF (NOT 200) OR (client-successfully-added==false)
end note
ro <-- ol : { successfully-connected==false,  reason-of-failure}

note over ol
ELSE
end note

note left ol #Orange
OKM addressing OL://v1/update-operation-key
is indicating successful creation of the Link
IF waiting > maximumWaitTimeToReceiveOperationKey
end note
ro <-- ol : { successfully-connected==false,  reason-of-failure}

note left ol
ELSE
end note

note over ol
After receiving an updated operation-key
for the operation-server
OL://v1/record-oam-request
end note
ro <-- ol : { successfully-connected==true }

deactivate ol

@enduml